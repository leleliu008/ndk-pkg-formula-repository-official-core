summary: A high-performance JavaScript and WebAssembly Engine powered by Google
web-url: https://v8.dev/
web-url: https://chromium.googlesource.com/v8/v8
web-uri: https://github.com/v8/v8
git-ref: refs/tags/12.7.224.16
version: 12.7.224.16
license: BSD-3-Clause
dep-upp: depot_tools
dep-pip: vpython
bsystem: gn

dofetch: |
    cat > .gclient <<EOF
    solutions = [
      { "name"        : 'src',
        "url"         : 'https://chromium.googlesource.com/v8/v8.git@origin/$PACKAGE_VERSION',
        "deps_file"   : 'DEPS',
        "managed"     : False,
        "custom_deps" : {},
        "custom_vars": {},
      },
    ]
    target_os = ['android']
    EOF

    run gclient sync --verbose

prepare: |
    case $TARGET_PLATFORM_ARCH in
        armv7a)  GN_ARG_TARGET_CPU=arm   ;;
        aarch64) GN_ARG_TARGET_CPU=arm64 ;;
        i686)    GN_ARG_TARGET_CPU=x86   ;;
        x86_64)  GN_ARG_TARGET_CPU=x64   ;;
    esac

    if [ "$TARGET_PLATFORM_ARCH" = 'armv7a' ] ; then
        GN_ARG_EXTRA='arm_version=7'
    else
        GN_ARG_EXTRA=
    fi

    gnw() {
        run gn gen . "--root=$PACKAGE_BSCRIPT_DIR" "'--args=$* target_os=\"android\" android_ndk_root=\"$ANDROID_NDK_ROOT\" android32_ndk_api_level=$TARGET_PLATFORM_VERS android64_ndk_api_level=$TARGET_PLATFORM_VERS target_cpu=\"$GN_ARG_TARGET_CPU\" v8_target_cpu=\"$GN_ARG_TARGET_CPU\" $GN_ARG_EXTRA'"
        run gn args --list .
    }

install: |
    gnw \
        is_cfi=false \
        is_debug=false \
        is_component_build=false \
        is_official_build=false \
        v8_static_library=true \
        v8_monolithic=true \
        v8_enable_future=true \
        v8_enable_fuzztest=false \
        v8_android_log_stdout=false \
        v8_enable_i18n_support=false \
        v8_use_external_startup_data=false \
        treat_warnings_as_errors=false \
        clang_use_chrome_plugins=false \
        strip_debug_info=true \
        use_custom_libcxx=false \
        use_lld=true
    run ninja --version
    run ninja --verbose d8
    run install_bins d8
    run install_libs obj/*.a
    run cp -r "$PACKAGE_BSCRIPT_DIR"/include "$PACKAGE_INSTALL_DIR/"
